{"version":2,"kind":"Notebook","sha256":"272c00970df0f8526731561bfc67c8dd85950d3a9347e56b37dff7d9cc7b9404","slug":"notebooks.plot-diagnostics","location":"/notebooks/plot-diagnostics.ipynb","dependencies":[],"frontmatter":{"title":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Brian Bonnlander","given":"Brian","family":"Bonnlander"},"name":"Brian Bonnlander","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Seth McGinnis","given":"Seth","family":"McGinnis"},"name":"Seth McGinnis","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Anderson Banihirwe","given":"Anderson","family":"Banihirwe"},"name":"Anderson Banihirwe","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Eric Nienhouse","given":"Eric","family":"Nienhouse"},"name":"Eric Nienhouse","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Jeff de La Beaujardière","given":"Jeff","non_dropping_particle":"de","family":"La Beaujardière"},"name":"Jeff de La Beaujardière","id":"contributors-myst-generated-uid-4"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/na-cordex-viz-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/na-cordex-viz-cookbook/blob/HEAD/notebooks/plot-diagnostics.ipynb","exports":[{"format":"ipynb","filename":"plot-diagnostics.ipynb","url":"/na-cordex-viz-cookbook/build/plot-diagnostics-bb2ee69270a24f4bdf3e2f5019cc300f.ipynb"}]},"widgets":{"application/vnd.jupyter.widget-state+json":{"state":{},"version_major":2,"version_minor":0}},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The NA-CORDEX data archive contains output from regional climate models (RCMs) run over a domain covering most of North America using boundary conditions from global climate model (GCM) simulations in the CMIP5 archive.  It differs from many climate datasets by combining runs from many independently derived simulations.  The usage of Zarr, Xarray, and Intake-ESM help simplify the problem of examining these disparate runs.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"E12SC5p65z"}],"key":"TgeLLIutun"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"See the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nEfTrZdxMH"},{"type":"link","url":"/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"README","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Cc5D6DirUb"}],"urlSource":"../README.md","dataUrl":"/index.json","internal":true,"protocol":"file","key":"Q1KVATvmpn"},{"type":"text","value":" file for more pointers and information on the NA-CORDEX data archive.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"l6LHRL4Ocn"}],"key":"MWat7KGekZ"},{"type":"heading","depth":2,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"P0cTYzO0ec"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"LX13TpKVNq"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"This cookbook provides useful methods for summarizing data values in large climate datasets.   It clearly shows where data have extreme values and where data are missing; this can be useful for validating that the data were gathered and stored correctly.   While this cookbook is specifically designed to examine any portion of the NA-CORDEX dataset using an intake catalog, the code can be adapted straightforwardly to other datasets that can be loaded via ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Ofoihsctjj"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BrBUJmbQC8"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"xkHi2qYWuf"}],"key":"W8xbifF8jf"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Topics covered in this notebook include:","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Fw8E00JJaR"}],"key":"vn4waB3aIw"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Different Ways to Create and Connect to Dask Distributed Cluster","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"K8Wlk29bSv"}],"key":"ORx8RLLhiX"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"How to Find and Obtain Data Using an Intake-ESM Catalog","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"EaUEwaAunb"}],"key":"aYvRDRyJGV"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"How to Create Various Statistical Summary Plots with matplotlib","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"TW8jd7reJr"}],"key":"LbQ7LnLK74"}],"key":"TF85Nirc1w"}],"key":"Nj6sCKioW8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JFW34RORsd"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"I5UBajpiBL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To more fully understand how the code in this notebook works, users are encouraged to explore the following introductory articles.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Gtu4kDcNVe"}],"key":"q1xsndsctL"},{"type":"table","position":{"start":{"line":5,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Tz9gU3VWJh"}],"key":"KBxB65Pozw"},{"type":"tableCell","header":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"am9oUKuRcT"}],"key":"lLVBGulZ5E"},{"type":"tableCell","header":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EUK1cUkJDT"}],"key":"tTGj5VU3un"}],"key":"qjcXi9XxXP"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray/xarray-intro.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Xarray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Mdzus864vD"}],"urlSource":"https://foundations.projectpythia.org/core/xarray/xarray-intro.html","key":"RTaWtuMYY3"}],"key":"X1XsLiWJNo"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rRuWnAfZSJ"}],"key":"qqqgdeZaVN"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[],"key":"mUh7iFy26m"}],"key":"o6Tw0Nukeb"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray/dask-arrays-xarray.html","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Dask Arrays with Xarray","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"YSjZKuxuoI"}],"urlSource":"https://foundations.projectpythia.org/core/xarray/dask-arrays-xarray.html","key":"gTuivw3uAJ"}],"key":"xho6i8gi49"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"zUp5pMJBmr"}],"key":"wQ7vSVVueY"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[],"key":"EL7xzRY4gp"}],"key":"XZJflTNLT1"},{"type":"tableRow","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Understanding of Zarr Metadata","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"pYLqkN0dVW"}],"urlSource":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","key":"NmAkCbFCIU"}],"key":"b7iU57rBtn"},{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DgEhDkfdiH"}],"key":"o2j3gOQV7P"},{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Familiarity with metadata structure","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"XriQRjpfZ6"}],"key":"oynqes9U5p"}],"key":"MOpII7RtBa"},{"type":"tableRow","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Understanding of Matplotlib","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"E0bTTzOP2P"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","key":"bGf0MPS2nA"}],"key":"OixYzIdULL"},{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"krIwK0WoD3"}],"key":"HPLXZ32OUP"},{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Familiarity with plot elements in matplotlib","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"JWqpiiF7FB"}],"key":"IEUZ4shnj9"}],"key":"AxxPffifY9"}],"key":"WAvaboOuq3"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":12,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"vM5x6QguBO"}],"key":"Jp9TJIgImI"},{"type":"text","value":": 45 minutes","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"ZE3V7Zgv7K"}],"key":"yQlb1OxNSF"}],"key":"xHBQF3utfw"},{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"strong","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Note","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"IvBnL4Esbe"}],"key":"nPjgtucm8W"},{"type":"text","value":": This notebook contains optional choices for running on NCAR supercomputers.   These can be ignored for users running outside of the NCAR domain.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"usmVXTziGv"}],"key":"a4tm24wgwD"}],"key":"o2lF9qDcNc"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dJz3J7IQ3X"}],"key":"PagRTxZ5qp"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cG9i36H1AZ"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"E1WYn6AtP8"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The main python packages used are ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vzxwV098rS"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fZkRn6tsEx"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BDEftBka7y"},{"type":"inlineCode","value":"intake-esm","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dZTNZfl4eQ"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nj5NkfbL9T"},{"type":"inlineCode","value":"dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"N0IbwmB2fE"},{"type":"text","value":", and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uIqavifHL3"},{"type":"inlineCode","value":"matplotlib","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QwlT8zc6D3"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cePV1CbLqX"}],"key":"KjTxyI7fTO"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Because some of the CORDEX data have been interpolated from a Lambert Conformal grid onto a rectangular grid for ease of use, there can be many missing values on the edges of the interpolated grid. For this reason, we also turn off warnings complaining about missing values in the data.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MO2BUSP10M"}],"key":"cAiHcTeuPR"}],"visibility":"show","key":"PDqe2cJXNa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport numpy as np\nimport intake\nimport ast\nimport matplotlib.pyplot as plt\n\n# Ignore dask-numpy warnings about finding missing values in the data\n%env PYTHONWARNINGS=ignore","key":"rpgUVMQGfd"},{"type":"output","id":"FOF-CMCc0KgltwHsglU-a","data":[{"output_type":"stream","name":"stdout","text":"env: PYTHONWARNINGS=ignore\n"}],"key":"n1iq5vWE95"}],"key":"FfnJeQiJuv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Select User Options","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GtXmpS3rDL"}],"identifier":"select-user-options","label":"Select User Options","html_id":"select-user-options","implicit":true,"key":"D69xw2Qpyj"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Users may choose between:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tf4dTiHYWz"}],"key":"kwI7nAOyye"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Cloud storage provider (Amazon AWS or NCAR),","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"K7MPak1BUi"}],"key":"XWVweX5Q9r"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Whether to truncate the data if running on a resource-limited computer,","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"zua7v2wmaA"}],"key":"iPUhxwQ79M"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Whether to obtain a Dask cluster from a PBS Scheduler or via the Dask Gateway package.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YgEKGxGyZD"}],"key":"rLhqcEXV8K"}],"key":"OntB2bzFwk"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Note","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"AnQ5TT620I"}],"key":"Gyui3ME1F2"},{"type":"text","value":": Using the NCAR cloud storage system requires a login account on an NCAR HPC computer.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"LrV7qXUhWH"}],"key":"Nt6JFyyok5"}],"key":"iBW1RXX1EI"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Choose Cloud Storage (Amazon AWS or NCAR Cloud)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RR1NSvOGzI"}],"identifier":"choose-cloud-storage-amazon-aws-or-ncar-cloud","label":"Choose Cloud Storage (Amazon AWS or NCAR Cloud)","html_id":"choose-cloud-storage-amazon-aws-or-ncar-cloud","implicit":true,"key":"l9A9n4rABU"}],"visibility":"show","key":"hHYRFlQIoM"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# If True,  use NCAR Cloud Storage.   Requires an NCAR user account.\n# If False, use AWS  Cloud Storage.\n\nUSE_NCAR_CLOUD = False","visibility":"show","key":"BQ4l1dux20"},{"type":"output","id":"QONtRD3ZkCAuX062hN-zh","data":[],"visibility":"show","key":"LFvSEDYqsm"}],"visibility":"show","key":"mYn2l4aBBy"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Choose whether to truncate data for resource-limited computers","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WHK3OzcMAA"}],"identifier":"choose-whether-to-truncate-data-for-resource-limited-computers","label":"Choose whether to truncate data for resource-limited computers","html_id":"choose-whether-to-truncate-data-for-resource-limited-computers","implicit":true,"key":"RnwephHBpq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"When running this notebook where compute resources are limited, or data transfer rates are slow, set ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X5DYE5jPD0"},{"type":"inlineCode","value":"TRUNCATE_DATA","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mqbqBZo1C8"},{"type":"text","value":" to True.   This will limit time ranges to 3 years from the start of a chosen NA-CORDEX scenario.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Go94V23bza"}],"key":"B3RlqwgLXd"}],"visibility":"show","key":"atOipSYrLP"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"TRUNCATE_DATA = True","visibility":"show","key":"h2so30Vs3W"},{"type":"output","id":"Px3OJspcXEqFcrajDtqVw","data":[],"visibility":"show","key":"nYO0jXu8zW"}],"visibility":"show","key":"opMEAQLnD0"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Choose whether to use a PBS Scheduler","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aOAFzoZzBa"}],"identifier":"choose-whether-to-use-a-pbs-scheduler","label":"Choose whether to use a PBS Scheduler","html_id":"choose-whether-to-use-a-pbs-scheduler","implicit":true,"key":"ZffcdBfLWU"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If running on a HPC computer with a PBS Scheduler, set to True.  Otherwise, set to False.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"or0v0WvZBW"}],"key":"KIfy6zzESq"}],"visibility":"show","key":"WN6KjjAdNX"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"USE_PBS_SCHEDULER = False","visibility":"show","key":"hH1yvtRGNA"},{"type":"output","id":"mGPh19PTQ_OQc4x5rcGKK","data":[],"visibility":"show","key":"eLS85glmw9"}],"visibility":"show","key":"doJYMHYCib"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Choose whether to use Dask Gateway","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QTrZWbRNoo"}],"identifier":"choose-whether-to-use-dask-gateway","label":"Choose whether to use Dask Gateway","html_id":"choose-whether-to-use-dask-gateway","implicit":true,"key":"mSJjsoFrbI"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"If running on Jupyter server with Dask Gateway configured, set to True.  Otherwise, set to False.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"IZOlerTCju"}],"key":"SlIrkAAmpx"}],"visibility":"show","key":"AvVL00ZmPR"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"USE_DASK_GATEWAY = False","visibility":"show","key":"V3uEP6yHFd"},{"type":"output","id":"MpsSRk7h-1tmG7qHAtQrC","data":[],"visibility":"show","key":"vQUiFwo659"}],"visibility":"show","key":"ky1vs0utpt"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create and Connect to Dask Distributed Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YnikInSg4D"}],"identifier":"create-and-connect-to-dask-distributed-cluster","label":"Create and Connect to Dask Distributed Cluster","html_id":"create-and-connect-to-dask-distributed-cluster","implicit":true,"key":"sOEEk0g3Sy"}],"key":"XSGrfIpJkA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def get_gateway_cluster():\n    \"\"\" Create cluster through dask_gateway\n    \"\"\"\n    from dask_gateway import Gateway\n\n    gateway = Gateway()\n    cluster = gateway.new_cluster()\n    cluster.adapt(minimum=2, maximum=20)\n    return cluster","key":"lqKDfIi4uZ"},{"type":"output","id":"y50-36XDofWe6MmrTJ5y6","data":[],"key":"i85BAhn8il"}],"key":"XJgcHaq1Kb"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"def get_pbs_cluster():\n    \"\"\" Create cluster through dask_jobqueue\n    \"\"\"\n    from dask_jobqueue import PBSCluster\n    \n    if TRUNCATE_DATA:\n        num_jobs = 4 \n        walltime = '0:10:00' \n        memory = '2GB' \n    else:\n        num_jobs = 20\n        walltime = '0:20:00'\n        memory = '10GB' \n\n    cluster = PBSCluster(cores=1, processes=1, walltime=walltime, memory=memory, queue='casper', \n                         resource_spec=f\"select=1:ncpus=1:mem={memory}\",)\n    cluster.scale(jobs=num_jobs)\n    return cluster","visibility":"show","key":"Wu0ps73VJ4"},{"type":"output","id":"xCrodymp6BwsVDVAmIMGB","data":[],"visibility":"show","key":"yBsWnkFpXT"}],"visibility":"show","key":"LGPWJ7itd1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def get_local_cluster():\n    \"\"\" Create cluster using the Jupyter server's resources\n    \"\"\"\n    from distributed import LocalCluster\n    cluster = LocalCluster()    \n\n    if TRUNCATE_DATA:\n        cluster.scale(4)\n    else:\n        cluster.scale(20)\n    return cluster","key":"ot5M4U4GG1"},{"type":"output","id":"_QYvNkbKP5xWsF5yydQYu","data":[],"key":"dqFp7G3MeT"}],"key":"MWjiyuMJap"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"# Obtain dask cluster in one of three ways\n\nif USE_PBS_SCHEDULER:\n    cluster = get_pbs_cluster()\nelif USE_DASK_GATEWAY:\n    cluster = get_gateway_cluster()\nelse:\n    cluster = get_local_cluster()\n\n# Connect to cluster\nfrom distributed import Client\nclient = Client(cluster)\n\n# Display cluster dashboard URL\ncluster","visibility":"show","key":"k028vjDS0c"},{"type":"output","id":"zux4kh9_S8JWSsSuK4Kis","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"LocalCluster(ddccbfee, 'tcp://127.0.0.1:34181', workers=4, threads=4, memory=15.62 GiB)","content_type":"text/plain"},"text/html":{"content":"<div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-mod-trusted jp-OutputArea-output\">\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\">\n    </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px; margin-top: 0px;\">LocalCluster</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">ddccbfee</p>\n        <table style=\"width: 100%; text-align: left;\">\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Workers:</strong> 4\n                </td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Total threads:</strong> 4\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Total memory:</strong> 15.62 GiB\n                </td>\n            </tr>\n            \n            <tr>\n    <td style=\"text-align: left;\"><strong>Status:</strong> running</td>\n    <td style=\"text-align: left;\"><strong>Using processes:</strong> True</td>\n</tr>\n\n            \n        </table>\n\n        <details>\n            <summary style=\"margin-bottom: 20px;\">\n                <h3 style=\"display: inline;\">Scheduler Info</h3>\n            </summary>\n\n            <div style=\"\">\n    <div>\n        <div style=\"width: 24px; height: 24px; background-color: #FFF7E5; border: 3px solid #FF6132; border-radius: 5px; position: absolute;\"> </div>\n        <div style=\"margin-left: 48px;\">\n            <h3 style=\"margin-bottom: 0px;\">Scheduler</h3>\n            <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Scheduler-cffc5c9d-d36b-40aa-9138-ecb2ea2c2698</p>\n            <table style=\"width: 100%; text-align: left;\">\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Comm:</strong> tcp://127.0.0.1:34181\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Workers:</strong> 0 \n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total threads:</strong> 0\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Started:</strong> Just now\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total memory:</strong> 0 B\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <details style=\"margin-left: 48px;\">\n        <summary style=\"margin-bottom: 20px;\">\n            <h3 style=\"display: inline;\">Workers</h3>\n        </summary>\n\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 0</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:35523\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:46771/status\" target=\"_blank\">http://127.0.0.1:46771/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:32867\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-oqdevl5d\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 1</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:34759\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:42259/status\" target=\"_blank\">http://127.0.0.1:42259/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:43427\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-zm842327\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 2</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:33591\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:33227/status\" target=\"_blank\">http://127.0.0.1:33227/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:38455\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-84c0w_lv\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 3</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:35833\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:34419/status\" target=\"_blank\">http://127.0.0.1:34419/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:34511\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-wb3hj23k\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n\n    </details>\n</div>\n\n        </details>\n    </div>\n</div>","content_type":"text/html"}}}],"visibility":"show","key":"AyUiHEFAf5"}],"visibility":"show","key":"GzQocV3PdQ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"☝️ Link to Dask dashboard will appear above.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CgUvJmZhgc"}],"key":"GbzKk4heGN"}],"key":"symU1nB79S"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Find and Obtain Data Using an Intake Catalog","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PI7Qt7tpqD"}],"identifier":"find-and-obtain-data-using-an-intake-catalog","label":"Find and Obtain Data Using an Intake Catalog","html_id":"find-and-obtain-data-using-an-intake-catalog","implicit":true,"key":"gGKuO3agZ2"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://intake-esm.readthedocs.io/en/stable/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Intake-esm Documentation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IgAIzgefbf"}],"urlSource":"https://intake-esm.readthedocs.io/en/stable/","key":"Z4nJ5NNUXi"}],"key":"akNLrVzsvB"}],"key":"QvsNzU32Yu"}],"visibility":"show","key":"T3RnUsHJMW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define the Intake Catalog URL and Storage Access Options","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O3qPsGzffN"}],"identifier":"define-the-intake-catalog-url-and-storage-access-options","label":"Define the Intake Catalog URL and Storage Access Options","html_id":"define-the-intake-catalog-url-and-storage-access-options","implicit":true,"key":"gSPekHwQbf"}],"key":"nYOuhMadq1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"if USE_NCAR_CLOUD:\n    catalog_url = \"https://stratus.ucar.edu/ncar-na-cordex/catalogs/aws-na-cordex.json\"\n    storage_options={\"anon\": True, 'client_kwargs':{\"endpoint_url\":\"https://stratus.ucar.edu/\"}}\n                     \nelse:\n    catalog_url = \"https://ncar-na-cordex.s3-us-west-2.amazonaws.com/catalogs/aws-na-cordex.json\"\n    storage_options={\"anon\": True}","key":"SVa9K7L7xV"},{"type":"output","id":"tHa96LGkw9o0spTPhsL7n","data":[],"key":"P8pXgSeOk6"}],"key":"q2MToySSnV"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Open catalog and produce a content summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E5cE0AwFQ4"}],"identifier":"open-catalog-and-produce-a-content-summary","label":"Open catalog and produce a content summary","html_id":"open-catalog-and-produce-a-content-summary","implicit":true,"key":"NTAvNGdlmy"}],"key":"WLaSKMAcKk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Have the catalog interpret the \"na-cordex-models\" column as a list of values, as opposed to single values.\ncol = intake.open_esm_datastore(catalog_url, read_csv_kwargs={\"converters\": {\"na-cordex-models\": ast.literal_eval}},)\ncol","key":"sfpvzfl957"},{"type":"output","id":"plJaLw6_dPwUEvrbZFSj2","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>aws-na-cordex catalog with 330 dataset(s) from 330 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>variable</th>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>standard_name</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>long_name</th>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>units</th>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>spatial_domain</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>grid</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>spatial_resolution</th>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>scenario</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>start_time</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>end_time</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>frequency</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>vertical_levels</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>bias_correction</th>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>na-cordex-models</th>\n      <td>26</td>\n    </tr>\n    <tr>\n      <th>path</th>\n      <td>330</td>\n    </tr>\n    <tr>\n      <th>derived_variable</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"y5sjpVZ8Yo"}],"key":"o0zzjRwJPO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Show the first few lines of the catalog\ncol.df.head(10)","key":"ae9vIILPJ5"},{"type":"output","id":"ivOgrxgSv0zN19cRDzDHG","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"  variable      standard_name                       long_name units  \\\n0     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n1     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n2     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n3     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n4     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n5     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n6     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n7     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n8     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n9     hurs  relative_humidity  Near-Surface Relative Humidity     %   \n\n  spatial_domain     grid spatial_resolution    scenario           start_time  \\\n0  north_america  NAM-22i           0.25 deg        eval  1979-01-01T12:00:00   \n1  north_america  NAM-44i           0.50 deg        eval  1979-01-01T12:00:00   \n2  north_america  NAM-22i           0.25 deg  hist-rcp45  1949-01-01T12:00:00   \n3  north_america  NAM-22i           0.25 deg  hist-rcp45  1949-01-01T12:00:00   \n4  north_america  NAM-22i           0.25 deg  hist-rcp45  1949-01-01T12:00:00   \n5  north_america  NAM-44i           0.50 deg  hist-rcp45  1949-01-01T12:00:00   \n6  north_america  NAM-44i           0.50 deg  hist-rcp45  1949-01-01T12:00:00   \n7  north_america  NAM-44i           0.50 deg  hist-rcp45  1949-01-01T12:00:00   \n8  north_america  NAM-22i           0.25 deg  hist-rcp85  1949-01-01T12:00:00   \n9  north_america  NAM-22i           0.25 deg  hist-rcp85  1949-01-01T12:00:00   \n\n              end_time frequency  vertical_levels bias_correction  \\\n0  2014-12-31T12:00:00       day                1             raw   \n1  2015-12-31T12:00:00       day                1             raw   \n2  2100-12-31T12:00:00       day                1     mbcn-Daymet   \n3  2100-12-31T12:00:00       day                1    mbcn-gridMET   \n4  2100-12-31T12:00:00       day                1             raw   \n5  2100-12-31T12:00:00       day                1     mbcn-Daymet   \n6  2100-12-31T12:00:00       day                1    mbcn-gridMET   \n7  2100-12-31T12:00:00       day                1             raw   \n8  2100-12-31T12:00:00       day                1     mbcn-Daymet   \n9  2100-12-31T12:00:00       day                1    mbcn-gridMET   \n\n                                    na-cordex-models  \\\n0  [ERA-Int.CRCM5-UQAM, ERA-Int.CRCM5-OUR, ERA-In...   \n1  [ERA-Int.CRCM5-UQAM, ERA-Int.RegCM4, ERA-Int.H...   \n2                                  [CanESM2.CanRCM4]   \n3                                  [CanESM2.CanRCM4]   \n4  [GFDL-ESM2M.CRCM5-OUR, CanESM2.CRCM5-OUR, CanE...   \n5  [MPI-ESM-LR.CRCM5-UQAM, CanESM2.CRCM5-UQAM, EC...   \n6  [MPI-ESM-LR.CRCM5-UQAM, CanESM2.CRCM5-UQAM, EC...   \n7  [MPI-ESM-LR.CRCM5-UQAM, CanESM2.CRCM5-UQAM, EC...   \n8  [MPI-ESM-MR.CRCM5-UQAM, GEMatm-Can.CRCM5-UQAM,...   \n9  [MPI-ESM-MR.CRCM5-UQAM, GEMatm-Can.CRCM5-UQAM,...   \n\n                                                path  \n0  s3://ncar-na-cordex/day/hurs.eval.day.NAM-22i....  \n1  s3://ncar-na-cordex/day/hurs.eval.day.NAM-44i....  \n2  s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...  \n3  s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...  \n4  s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...  \n5  s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...  \n6  s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...  \n7  s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...  \n8  s3://ncar-na-cordex/day/hurs.hist-rcp85.day.NA...  \n9  s3://ncar-na-cordex/day/hurs.hist-rcp85.day.NA...  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>variable</th>\n      <th>standard_name</th>\n      <th>long_name</th>\n      <th>units</th>\n      <th>spatial_domain</th>\n      <th>grid</th>\n      <th>spatial_resolution</th>\n      <th>scenario</th>\n      <th>start_time</th>\n      <th>end_time</th>\n      <th>frequency</th>\n      <th>vertical_levels</th>\n      <th>bias_correction</th>\n      <th>na-cordex-models</th>\n      <th>path</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-22i</td>\n      <td>0.25 deg</td>\n      <td>eval</td>\n      <td>1979-01-01T12:00:00</td>\n      <td>2014-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>raw</td>\n      <td>[ERA-Int.CRCM5-UQAM, ERA-Int.CRCM5-OUR, ERA-In...</td>\n      <td>s3://ncar-na-cordex/day/hurs.eval.day.NAM-22i....</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-44i</td>\n      <td>0.50 deg</td>\n      <td>eval</td>\n      <td>1979-01-01T12:00:00</td>\n      <td>2015-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>raw</td>\n      <td>[ERA-Int.CRCM5-UQAM, ERA-Int.RegCM4, ERA-Int.H...</td>\n      <td>s3://ncar-na-cordex/day/hurs.eval.day.NAM-44i....</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-22i</td>\n      <td>0.25 deg</td>\n      <td>hist-rcp45</td>\n      <td>1949-01-01T12:00:00</td>\n      <td>2100-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>mbcn-Daymet</td>\n      <td>[CanESM2.CanRCM4]</td>\n      <td>s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-22i</td>\n      <td>0.25 deg</td>\n      <td>hist-rcp45</td>\n      <td>1949-01-01T12:00:00</td>\n      <td>2100-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>mbcn-gridMET</td>\n      <td>[CanESM2.CanRCM4]</td>\n      <td>s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-22i</td>\n      <td>0.25 deg</td>\n      <td>hist-rcp45</td>\n      <td>1949-01-01T12:00:00</td>\n      <td>2100-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>raw</td>\n      <td>[GFDL-ESM2M.CRCM5-OUR, CanESM2.CRCM5-OUR, CanE...</td>\n      <td>s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-44i</td>\n      <td>0.50 deg</td>\n      <td>hist-rcp45</td>\n      <td>1949-01-01T12:00:00</td>\n      <td>2100-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>mbcn-Daymet</td>\n      <td>[MPI-ESM-LR.CRCM5-UQAM, CanESM2.CRCM5-UQAM, EC...</td>\n      <td>s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-44i</td>\n      <td>0.50 deg</td>\n      <td>hist-rcp45</td>\n      <td>1949-01-01T12:00:00</td>\n      <td>2100-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>mbcn-gridMET</td>\n      <td>[MPI-ESM-LR.CRCM5-UQAM, CanESM2.CRCM5-UQAM, EC...</td>\n      <td>s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-44i</td>\n      <td>0.50 deg</td>\n      <td>hist-rcp45</td>\n      <td>1949-01-01T12:00:00</td>\n      <td>2100-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>raw</td>\n      <td>[MPI-ESM-LR.CRCM5-UQAM, CanESM2.CRCM5-UQAM, EC...</td>\n      <td>s3://ncar-na-cordex/day/hurs.hist-rcp45.day.NA...</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-22i</td>\n      <td>0.25 deg</td>\n      <td>hist-rcp85</td>\n      <td>1949-01-01T12:00:00</td>\n      <td>2100-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>mbcn-Daymet</td>\n      <td>[MPI-ESM-MR.CRCM5-UQAM, GEMatm-Can.CRCM5-UQAM,...</td>\n      <td>s3://ncar-na-cordex/day/hurs.hist-rcp85.day.NA...</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>hurs</td>\n      <td>relative_humidity</td>\n      <td>Near-Surface Relative Humidity</td>\n      <td>%</td>\n      <td>north_america</td>\n      <td>NAM-22i</td>\n      <td>0.25 deg</td>\n      <td>hist-rcp85</td>\n      <td>1949-01-01T12:00:00</td>\n      <td>2100-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>mbcn-gridMET</td>\n      <td>[MPI-ESM-MR.CRCM5-UQAM, GEMatm-Can.CRCM5-UQAM,...</td>\n      <td>s3://ncar-na-cordex/day/hurs.hist-rcp85.day.NA...</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"j46Da7ZXZ2"}],"key":"XZzVj5hrrK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Produce a catalog content summary.\n\nuniques = col.unique()\n\ncolumns = [\"variable\", \"scenario\", \"grid\", \"na-cordex-models\", \"bias_correction\"]\nfor column in columns:\n    print(f'{column}: {uniques[column]}\\n')","key":"rJo19qXe3w"},{"type":"output","id":"kD-eqJce4sKcXlPYAYblo","data":[{"output_type":"stream","name":"stdout","text":"variable: ['hurs', 'huss', 'pr', 'prec', 'ps', 'rsds', 'sfcWind', 'tas', 'tasmax', 'tasmin', 'temp', 'tmax', 'tmin', 'uas', 'vas']\n\nscenario: ['eval', 'hist-rcp45', 'hist-rcp85', 'hist', 'rcp45', 'rcp85']\n\ngrid: ['NAM-22i', 'NAM-44i']\n\nna-cordex-models: ['ERA-Int.CRCM5-UQAM', 'ERA-Int.CRCM5-OUR', 'ERA-Int.RegCM4', 'ERA-Int.CanRCM4', 'ERA-Int.WRF', 'ERA-Int.HIRHAM5', 'ERA-Int.RCA4', 'CanESM2.CanRCM4', 'GFDL-ESM2M.CRCM5-OUR', 'CanESM2.CRCM5-OUR', 'MPI-ESM-LR.CRCM5-UQAM', 'CanESM2.CRCM5-UQAM', 'EC-EARTH.HIRHAM5', 'EC-EARTH.RCA4', 'CanESM2.RCA4', 'MPI-ESM-MR.CRCM5-UQAM', 'GEMatm-Can.CRCM5-UQAM', 'GEMatm-MPI.CRCM5-UQAM', 'HadGEM2-ES.RegCM4', 'GFDL-ESM2M.RegCM4', 'MPI-ESM-LR.RegCM4', 'HadGEM2-ES.WRF', 'GFDL-ESM2M.WRF', 'MPI-ESM-LR.WRF', 'CNRM-CM5.CRCM5-OUR', 'MPI-ESM-LR.CRCM5-OUR']\n\nbias_correction: ['raw', 'mbcn-Daymet', 'mbcn-gridMET']\n\n"}],"key":"U71pUx6G4A"}],"key":"lDJjDYWbl9"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load data into xarray using the catalog","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y3OQw4jCNG"}],"identifier":"load-data-into-xarray-using-the-catalog","label":"Load data into xarray using the catalog","html_id":"load-data-into-xarray-using-the-catalog","implicit":true,"key":"l7y1SKY5od"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Choose any combination of variable, grid, scenario, and bias correction listed in the catalog.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ytAaQYgJ6a"}],"key":"G4kT6p8fKG"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Below we choose the variable ‘tmax’ (Maximum Daily Surface Temperature) as a default for its ease of interpretation.   For this example, we also choose a lower-resolution grid and the scenario with the shortest time range (15 years) to reduce the default data processing requirements.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gH3jzkHbPN"}],"key":"agu3qZGm3c"}],"key":"G5fASZdrru"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"data_var = 'tmax'\n\ncol_subset = col.search(\n    variable=data_var,\n    grid=\"NAM-44i\",\n    scenario=\"eval\",\n    bias_correction=\"raw\",\n)\n\ncol_subset","key":"FnYC3Uuygf"},{"type":"output","id":"E5iW4eLcQrwmYuEqhBwrt","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"<p><strong>aws-na-cordex catalog with 1 dataset(s) from 1 asset(s)</strong>:</p> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>unique</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>variable</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>standard_name</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>long_name</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>units</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>spatial_domain</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>grid</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>spatial_resolution</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>scenario</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>start_time</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>end_time</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>frequency</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>vertical_levels</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>bias_correction</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>na-cordex-models</th>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>path</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>derived_variable</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"YJ8HfoVV6m"}],"key":"AciteaiLv1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Verify our query matches at least one entry in the catalog.\n\ncol_subset.df","key":"go8QVvm9kE"},{"type":"output","id":"wFmGUeXbZkpe2IQhselzB","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"  variable    standard_name                                   long_name units  \\\n0     tmax  air_temperature  Daily Maximum Near-Surface Air Temperature  degC   \n\n  spatial_domain     grid spatial_resolution scenario           start_time  \\\n0  north_america  NAM-44i           0.50 deg     eval  1979-01-01T12:00:00   \n\n              end_time frequency  vertical_levels bias_correction  \\\n0  2015-12-31T12:00:00       day                1             raw   \n\n                                    na-cordex-models  \\\n0  [ERA-Int.CRCM5-UQAM, ERA-Int.RegCM4, ERA-Int.H...   \n\n                                                path  \n0  s3://ncar-na-cordex/day/tmax.eval.day.NAM-44i....  ","content_type":"text/plain"},"text/html":{"content":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>variable</th>\n      <th>standard_name</th>\n      <th>long_name</th>\n      <th>units</th>\n      <th>spatial_domain</th>\n      <th>grid</th>\n      <th>spatial_resolution</th>\n      <th>scenario</th>\n      <th>start_time</th>\n      <th>end_time</th>\n      <th>frequency</th>\n      <th>vertical_levels</th>\n      <th>bias_correction</th>\n      <th>na-cordex-models</th>\n      <th>path</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>tmax</td>\n      <td>air_temperature</td>\n      <td>Daily Maximum Near-Surface Air Temperature</td>\n      <td>degC</td>\n      <td>north_america</td>\n      <td>NAM-44i</td>\n      <td>0.50 deg</td>\n      <td>eval</td>\n      <td>1979-01-01T12:00:00</td>\n      <td>2015-12-31T12:00:00</td>\n      <td>day</td>\n      <td>1</td>\n      <td>raw</td>\n      <td>[ERA-Int.CRCM5-UQAM, ERA-Int.RegCM4, ERA-Int.H...</td>\n      <td>s3://ncar-na-cordex/day/tmax.eval.day.NAM-44i....</td>\n    </tr>\n  </tbody>\n</table>\n</div>","content_type":"text/html"}}}],"key":"TmtLTaYadh"}],"key":"iTGD1pUUHt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Load catalog entries for subset into a dictionary of xarray datasets, and open the first one.\n\ndsets = col_subset.to_dataset_dict(\n    xarray_open_kwargs={\"consolidated\": True}, storage_options=storage_options\n)\nprint(f\"\\nDataset dictionary keys:\\n {dsets.keys()}\")\n\n# Load the first dataset and display a summary.\ndataset_key = list(dsets.keys())[0]\nstore_name = dataset_key + \".zarr\"\n\nds = dsets[dataset_key]\nds\n\n# Note that the xarray dataset summary includes a 'member_id' coordinate, which is a renaming of the \n# 'na-cordex-models' column in the catalog.","key":"SDn8i0HhYN"},{"type":"output","id":"PgNg0GQKHLK12DRD3ft8B","data":[{"output_type":"stream","name":"stdout","text":"\n--> The keys in the returned dictionary of datasets are constructed as follows:\n\t'variable.frequency.scenario.grid.bias_correction'\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"\n<style>\n    /* Turns off some styling */\n    progress {\n        /* gets rid of default border in Firefox and Opera. */\n        border: none;\n        /* Needs to be in here for Safari polyfill so background images work as expected. */\n        background-size: auto;\n    }\n    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n    }\n    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n        background: #F44336;\n    }\n</style>\n","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<IPython.core.display.HTML object>","content_type":"text/plain"},"text/html":{"content":"\n    <div>\n      <progress value='0' class='' max='1' style='width:300px; height:20px; vertical-align: middle;'></progress>\n      \n    </div>\n    ","content_type":"text/html"}}},{"output_type":"stream","name":"stdout","text":"\nDataset dictionary keys:\n dict_keys(['tmax.day.eval.NAM-44i.raw'])\n"},{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"<xarray.Dataset> Size: 13GB\nDimensions:    (lat: 129, lon: 300, member_id: 6, time: 13514, bnds: 2)\nCoordinates:\n  * lat        (lat) float64 1kB 12.25 12.75 13.25 13.75 ... 75.25 75.75 76.25\n  * lon        (lon) float64 2kB -171.8 -171.2 -170.8 ... -23.25 -22.75 -22.25\n  * member_id  (member_id) <U18 432B 'ERA-Int.CRCM5-UQAM' ... 'ERA-Int.WRF'\n  * time       (time) datetime64[ns] 108kB 1979-01-01T12:00:00 ... 2015-12-31...\n    time_bnds  (time, bnds) datetime64[ns] 216kB dask.array<chunksize=(13514, 2), meta=np.ndarray>\nDimensions without coordinates: bnds\nData variables:\n    tmax       (member_id, time, lat, lon) float32 13GB dask.array<chunksize=(4, 1000, 65, 150), meta=np.ndarray>\nAttributes: (12/42)\n    CORDEX_domain:                        NAM-44\n    contact:                              {\"ERA-Int.CRCM5-UQAM\": \"Winger.Katj...\n    contact_note:                         {\"ERA-Int.RegCM4\": \"Simulations by ...\n    creation_date:                        {\"ERA-Int.CRCM5-UQAM\": \"2015-06-18T...\n    driving_experiment:                   {\"ERA-Int.CRCM5-UQAM\": \"ECMWF-ERAIN...\n    driving_experiment_name:              evaluation\n    ...                                   ...\n    intake_esm_attrs:vertical_levels:     1\n    intake_esm_attrs:bias_correction:     raw\n    intake_esm_attrs:na-cordex-models:    ERA-Int.CRCM5-UQAM,ERA-Int.RegCM4,E...\n    intake_esm_attrs:path:                s3://ncar-na-cordex/day/tmax.eval.d...\n    intake_esm_attrs:_data_format_:       zarr\n    intake_esm_dataset_key:               tmax.day.eval.NAM-44i.raw","content_type":"text/plain"},"text/html":{"content_type":"text/html","hash":"ee83ccd3d02e2df10ee9a49734d5dc58","path":"/na-cordex-viz-cookbook/build/ee83ccd3d02e2df10ee9a49734d5dc58.html"}}}],"key":"eEXz4UfiHu"}],"key":"SO1BE5UsSY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Functions for Subsetting and Plotting","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hGGsiBZemb"}],"identifier":"functions-for-subsetting-and-plotting","label":"Functions for Subsetting and Plotting","html_id":"functions-for-subsetting-and-plotting","implicit":true,"key":"YwOQMYxyzU"}],"key":"B2MFVvhRRe"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Helper Function to Create a Single Map Plot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a31tg4ml6P"}],"identifier":"helper-function-to-create-a-single-map-plot","label":"Helper Function to Create a Single Map Plot","html_id":"helper-function-to-create-a-single-map-plot","implicit":true,"key":"x16w1VQRaO"}],"key":"wi9LJ9qd1U"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plotMap(ax, map_slice, date_object=None, member_id=None):\n    \"\"\"Create a map plot on the given axes, with min/max as text\"\"\"\n\n    ax.imshow(map_slice, origin='lower')\n\n    minval = map_slice.min(dim = ['lat', 'lon'])\n    maxval = map_slice.max(dim = ['lat', 'lon'])\n\n    # Format values to have at least 4 digits of precision.\n    ax.text(0.01, 0.03, \"Min: %3g\" % minval, transform=ax.transAxes, fontsize=12)\n    ax.text(0.99, 0.03, \"Max: %3g\" % maxval, transform=ax.transAxes, fontsize=12, horizontalalignment='right')\n    ax.set_xticks([])\n    ax.set_yticks([])\n    \n    if date_object:\n        ax.set_title(date_object.values.astype(str)[:10], fontsize=12)\n        \n    if member_id:\n        ax.set_ylabel(member_id, fontsize=12)\n        \n    return ax","key":"wFCdRnwVIY"},{"type":"output","id":"blD_PtvT29pfEjVel62xr","data":[],"key":"twR5kDsqWM"}],"key":"qVTJgvaREh"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Helper Function for Finding Dates with Available Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QSLuL6LbpV"}],"identifier":"helper-function-for-finding-dates-with-available-data","label":"Helper Function for Finding Dates with Available Data","html_id":"helper-function-for-finding-dates-with-available-data","implicit":true,"key":"DdLtpnO9HT"}],"key":"Z9ZZna0KHD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def getValidDateIndexes(member_slice):\n    \"\"\"Search for the first and last dates with finite values.\"\"\"\n    min_values = member_slice.min(dim = ['lat', 'lon'])\n    is_finite = np.isfinite(min_values)\n    finite_indexes = np.where(is_finite)\n\n    start_index = finite_indexes[0][0]\n    end_index = finite_indexes[0][-1]\n    return start_index, end_index","key":"tk4onFV9e2"},{"type":"output","id":"HtpLzO6xpYKh8ynhLWQ19","data":[],"key":"JHenN85mVA"}],"key":"e5rCoMf0y6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Helper Function for Truncating Data Slices","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YgAZ9CRlW3"}],"identifier":"helper-function-for-truncating-data-slices","label":"Helper Function for Truncating Data Slices","html_id":"helper-function-for-truncating-data-slices","implicit":true,"key":"YBVUCbs5c5"}],"key":"Ui0zkXWGWB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def truncateData(data_slice, num_years):\n    \"\"\"Remove all but the first num_years of valid data from the data slice.\"\"\"\n    start_index, _ = getValidDateIndexes(data_slice)\n    start_date = data_slice.time[start_index]\n    start_year = start_date.dt.year.values\n    year_range = start_year + np.arange(num_years)\n    \n    data_slice = data_slice.isel(time=ds.time.dt.year.isin(year_range))\n    return data_slice","key":"n4ODDALEDx"},{"type":"output","id":"oZaW0PCWtpAcunBkIzk1M","data":[],"key":"Ti6cvEAr84"}],"key":"SWZygUpmSd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Function Producing Maps of First, Middle, and Final Timesteps","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K9Nl4P4Mg9"}],"identifier":"function-producing-maps-of-first-middle-and-final-timesteps","label":"Function Producing Maps of First, Middle, and Final Timesteps","html_id":"function-producing-maps-of-first-middle-and-final-timesteps","implicit":true,"key":"qK1rNZ29ot"}],"key":"VuBbQt0pFL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_first_mid_last(ds, data_var, store_name):\n    \"\"\"Plot the first, middle, and final time steps for several climate runs.\"\"\"\n    num_members_to_plot = 4\n    member_names = ds.coords['member_id'].values[0:num_members_to_plot]\n    \n    figWidth = 18 \n    figHeight = 12 \n    numPlotColumns = 3\n    fig, axs = plt.subplots(num_members_to_plot, numPlotColumns, figsize=(figWidth, figHeight), constrained_layout=True)\n\n    for index in np.arange(num_members_to_plot):\n        mem_id = member_names[index]\n        data_slice = ds[data_var].sel(member_id=mem_id)\n           \n        start_index, end_index = getValidDateIndexes(data_slice)\n        midDateIndex = np.floor(len(ds.time) / 2).astype(int)\n\n        startDate = ds.time[start_index]\n        first_step = data_slice.sel(time=startDate) \n        ax = axs[index, 0]\n        plotMap(ax, first_step, startDate, mem_id)\n\n        midDate = ds.time[midDateIndex]\n        mid_step = data_slice.sel(time=midDate)   \n        ax = axs[index, 1]\n        plotMap(ax, mid_step, midDate)\n\n        endDate = ds.time[end_index]\n        last_step = data_slice.sel(time=endDate)            \n        ax = axs[index, 2]\n        plotMap(ax, last_step, endDate)\n        \n        plt.suptitle(f'First, Middle, and Last Timesteps for Selected Runs in \"{store_name}\"', fontsize=20)\n\n    return fig","key":"Y3QzVsKuIO"},{"type":"output","id":"kLBVXP4IN_6YXylJDKpdr","data":[],"key":"PZVNzbVm3v"}],"key":"zss8bOdWYJ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Function Producing Statistical Map Plots","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YfvwqMlvgh"}],"identifier":"function-producing-statistical-map-plots","label":"Function Producing Statistical Map Plots","html_id":"function-producing-statistical-map-plots","implicit":true,"key":"lI4SV6eX9r"}],"key":"Gu9cIcW8sz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_stat_maps(ds, data_var, store_name, truncate_data):\n    \"\"\"Plot the mean, min, max, and standard deviation values for several climate runs, aggregated over time.\"\"\"\n    \n    num_members_to_plot = 4\n    member_names = ds.coords['member_id'].values[0:num_members_to_plot]\n\n    figWidth = 25 \n    figHeight = 12 \n    numPlotColumns = 4\n    \n    fig, axs = plt.subplots(num_members_to_plot, numPlotColumns, figsize=(figWidth, figHeight), constrained_layout=True)\n\n    for index in np.arange(num_members_to_plot):\n        mem_id = member_names[index]\n        data_slice = ds[data_var].sel(member_id=mem_id)\n        \n        if truncate_data:\n            # Limit time range to one year.\n            data_slice = truncateData(data_slice, 1)\n\n        # Save slice in memory to prevent repeated disk loads\n        data_slice = data_slice.persist()\n\n        data_agg = data_slice.min(dim='time')\n        plotMap(axs[index, 0], data_agg, member_id=mem_id)\n\n        data_agg = data_slice.max(dim='time')\n        plotMap(axs[index, 1], data_agg)\n\n        data_agg = data_slice.mean(dim='time')\n        plotMap(axs[index, 2], data_agg)\n\n        data_agg = data_slice.std(dim='time')\n        plotMap(axs[index, 3], data_agg)\n\n    axs[0, 0].set_title(f'min({data_var})', fontsize=15)\n    axs[0, 1].set_title(f'max({data_var})', fontsize=15)\n    axs[0, 2].set_title(f'mean({data_var})', fontsize=15)\n    axs[0, 3].set_title(f'std({data_var})', fontsize=15)\n\n    plt.suptitle(f'Spatial Statistics for Selected Runs in \"{store_name}\"', fontsize=20)\n\n    return fig","key":"F7zUtQD7L9"},{"type":"output","id":"4M3DM1W-HSEaCIil47Hdf","data":[],"key":"xmJ8EG9No8"}],"key":"wOJ0ztMAZY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Function Producing Time Series Plots","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"F7TBxk9dtP"}],"identifier":"function-producing-time-series-plots","label":"Function Producing Time Series Plots","html_id":"function-producing-time-series-plots","implicit":true,"key":"zgv7RQreFj"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Also show which dates have no available data values, as a rug plot.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"OO8meSkBhs"}],"key":"HN5bW29Ttv"}],"key":"ITTUDcm8Cb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def plot_timeseries(ds, data_var, store_name, truncate_data):\n    \"\"\"Plot the mean, min, max, and standard deviation values for several climate runs, \n       aggregated over lat/lon dimensions.\"\"\"\n\n    num_members_to_plot = 4\n    member_names = ds.coords['member_id'].values[0:num_members_to_plot]\n\n    figWidth = 25 \n    figHeight = 20\n    linewidth = 0.5\n\n    numPlotColumns = 1\n    fig, axs = plt.subplots(num_members_to_plot, numPlotColumns, figsize=(figWidth, figHeight))\n        \n    for index in np.arange(num_members_to_plot):\n        mem_id = member_names[index]\n        data_slice = ds[data_var].sel(member_id=mem_id)\n        \n        if truncate_data:\n            # Limit time range to one year.\n            data_slice = truncateData(data_slice, 1)\n\n        # Save slice in memory to prevent repeated disk loads\n        data_slice = data_slice.persist()\n\n        unit_string = ds[data_var].attrs['units']\n        \n        min_vals = data_slice.min(dim = ['lat', 'lon'])\n        max_vals = data_slice.max(dim = ['lat', 'lon'])\n        mean_vals = data_slice.mean(dim = ['lat', 'lon'])\n        std_vals = data_slice.std(dim = ['lat', 'lon'])\n\n        missing_indexes = np.isnan(min_vals).compute()\n        missing_times = data_slice.time[missing_indexes]\n\n            \n        axs[index].plot(data_slice.time, max_vals, linewidth=linewidth, label='max', color='red')\n        axs[index].plot(data_slice.time, mean_vals, linewidth=linewidth, label='mean', color='black')\n        axs[index].fill_between(data_slice.time, (mean_vals - std_vals), (mean_vals + std_vals), \n                                         color='grey', linewidth=0, label='std', alpha=0.5)\n        axs[index].plot(data_slice.time, min_vals, linewidth=linewidth, label='min', color='blue')\n            \n        # Produce a rug plot along the bottom of the figure for missing data.\n        ymin, ymax = axs[index].get_ylim()\n        rug_y = ymin + 0.01*(ymax-ymin)\n        axs[index].plot(missing_times, [rug_y]*len(missing_times), '|', color='m', label='missing')\n        axs[index].set_title(mem_id, fontsize=20)\n        axs[index].legend(loc='upper right')\n        axs[index].set_ylabel(unit_string)\n\n    plt.tight_layout(pad=10.2, w_pad=3.5, h_pad=3.5)\n    plt.suptitle(f'Temporal Statistics for Selected Runs in \"{store_name}\"', fontsize=20)\n\n    return fig","key":"YZbYpV8sBM"},{"type":"output","id":"jhQ6_9nXgL5ib3qKpMIh9","data":[],"key":"UbIVpk6SVA"}],"key":"AYB0fWSmLN"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Produce Diagnostic Plots","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eHT7OXQupg"}],"identifier":"produce-diagnostic-plots","label":"Produce Diagnostic Plots","html_id":"produce-diagnostic-plots","implicit":true,"key":"KCU9sxZ6dn"}],"key":"yPIwXLBVav"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot First, Middle, and Final Timesteps for Several Output Runs (less compute intensive)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pikZa3IL1B"}],"identifier":"plot-first-middle-and-final-timesteps-for-several-output-runs-less-compute-intensive","label":"Plot First, Middle, and Final Timesteps for Several Output Runs (less compute intensive)","html_id":"plot-first-middle-and-final-timesteps-for-several-output-runs-less-compute-intensive","implicit":true,"key":"FyxQV7pIuG"}],"key":"MfyA24nK0a"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n\n# Plot using the Zarr Store obtained from an earlier step in the notebook.\nfigure = plot_first_mid_last(ds, data_var, store_name)\n\nplt.show()","key":"VUeMImbLwl"},{"type":"output","id":"C-6mQHzuvxG8M8iJWKTrQ","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1800x1200 with 12 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"a0ccc05c27ef306db6a6bf329c2f6cc0","path":"/na-cordex-viz-cookbook/build/a0ccc05c27ef306db6a6bf329c2f6cc0.png"}}},{"output_type":"stream","name":"stdout","text":"CPU times: user 7.15 s, sys: 1.51 s, total: 8.66 s\nWall time: 3min 6s\n"}],"key":"P6S7ceYnsr"}],"key":"FEySY3G8bT"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Optional: Save figure to a PNG file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PoIiKMCqUY"}],"identifier":"optional-save-figure-to-a-png-file","label":"Optional: Save figure to a PNG file","html_id":"optional-save-figure-to-a-png-file","implicit":true,"key":"fj1tjwvW29"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Change the value of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OPTpFmvobT"},{"type":"inlineCode","value":"SAVE_PLOT","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LwY56TNC0r"},{"type":"text","value":" to True to produce a PNG file of the plot.   The file will be saved in the same folder as this notebook.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qBjqFTdMfY"}],"key":"PmjoGdSgTX"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Then use Jupyter’s file browser to locate the file and right-click the file to download it.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EJFqDAOadU"}],"key":"xV0tBhU9pp"}],"key":"vsSzP7IvrS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"SAVE_PLOT = False\nif SAVE_PLOT:\n    plotfile = f'./{dataset_key}_FML.png'\n    figure.savefig(plotfile, dpi=100)","key":"Ldr0ocuwfK"},{"type":"output","id":"pdXCCovEVG-sB5I5Pqiu_","data":[],"key":"i5HOKhO1Lv"}],"key":"lrWYnlW70T"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create Statistical Map Plots for Several Output Runs (more compute intensive)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hQlwC7ELIf"}],"identifier":"create-statistical-map-plots-for-several-output-runs-more-compute-intensive","label":"Create Statistical Map Plots for Several Output Runs (more compute intensive)","html_id":"create-statistical-map-plots-for-several-output-runs-more-compute-intensive","implicit":true,"key":"SumBw3u2Om"}],"key":"AOw9jJkEA7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n\n# Plot using the Zarr Store obtained from an earlier step in the notebook.\nfigure = plot_stat_maps(ds, data_var, store_name, TRUNCATE_DATA)\n\nplt.show()","key":"sGWFIeyfiG"},{"type":"output","id":"fG5eJzA1XGDLEgJQZMdLK","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 2500x1200 with 16 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"ebe10d67043e786c0838fb2c9361b8fe","path":"/na-cordex-viz-cookbook/build/ebe10d67043e786c0838fb2c9361b8fe.png"}}},{"output_type":"stream","name":"stdout","text":"CPU times: user 6.2 s, sys: 1.13 s, total: 7.33 s\nWall time: 2min 21s\n"}],"key":"fQbkIsLe60"}],"key":"tefIzII5pq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Optional: Save figure to a PNG file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zWC9nLVEzY"}],"identifier":"optional-save-figure-to-a-png-file","label":"Optional: Save figure to a PNG file","html_id":"optional-save-figure-to-a-png-file-1","implicit":true,"key":"pkJwYvbDmm"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Change the value of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nDBHU4NHOv"},{"type":"inlineCode","value":"SAVE_PLOT","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IZLeA3OQ8d"},{"type":"text","value":" to True to produce a PNG file of the plot.   The file will be saved in the same folder as this notebook.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wsi0T2qKLK"}],"key":"xofPdWJIaR"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Then use Jupyter’s file browser to locate the file and right-click the file to download it.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MdIxrLB0N1"}],"key":"iwT7SB2UUJ"}],"key":"WQRB7bocOt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"SAVE_PLOT = False\nif SAVE_PLOT:\n    plotfile = f'./{dataset_key}_MAPS.png'\n    figure.savefig(plotfile, dpi=100)","key":"R4qhwc9CIs"},{"type":"output","id":"J5KhBey7FTczh6_uHTgYe","data":[],"key":"ZNhRB4aqwB"}],"key":"HrE1eIfCcn"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Time Series for Several Output Runs (more compute intensive)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qrmfplFeDK"}],"identifier":"plot-time-series-for-several-output-runs-more-compute-intensive","label":"Plot Time Series for Several Output Runs (more compute intensive)","html_id":"plot-time-series-for-several-output-runs-more-compute-intensive","implicit":true,"key":"oWbScQPJBQ"}],"key":"oFy6YBhVdB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%%time\n\n# Plot using the Zarr Store obtained from an earlier step in the notebook.\nfigure = plot_timeseries(ds, data_var, store_name, TRUNCATE_DATA)\n\nplt.show()","key":"gJd2pNtIfR"},{"type":"output","id":"KorREwiXWYWVqx1vHwx6B","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 2500x2000 with 4 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"fca7e89a850d259ffd80aa7bc6913519","path":"/na-cordex-viz-cookbook/build/fca7e89a850d259ffd80aa7bc6913519.png"}}},{"output_type":"stream","name":"stdout","text":"CPU times: user 5.56 s, sys: 1.18 s, total: 6.74 s\nWall time: 2min 27s\n"}],"key":"X6MFLXOneV"}],"key":"ei8RYECzUC"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Optional: Save figure to a PNG file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G2bYW0t33h"}],"identifier":"optional-save-figure-to-a-png-file","label":"Optional: Save figure to a PNG file","html_id":"optional-save-figure-to-a-png-file-2","implicit":true,"key":"H0Ps9qJNSn"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Change the value of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LZxDELAMZV"},{"type":"inlineCode","value":"SAVE_PLOT","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HzcMnJEYXW"},{"type":"text","value":" to True to produce a PNG file of the plot.   The file will be saved in the same folder as this notebook.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"b5eegOHYI4"}],"key":"Yvyb9XSxYf"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Then use Jupyter’s file browser to locate the file and right-click the file to download it.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"afolYYEw4b"}],"key":"Mf7SdVIOWj"}],"key":"UDQa0Ittsq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"SAVE_PLOT = False\nif SAVE_PLOT:\n    plotfile = f'./{dataset_key}_TS.png'\n    figure.savefig(plotfile, dpi=100)","key":"eamGN8zeWY"},{"type":"output","id":"NVedT9NWtl-Je75uajx7b","data":[],"key":"vml9f7imJ1"}],"key":"txfpFeFJss"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Release the workers.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xXRz7EQ5U8"}],"identifier":"release-the-workers","label":"Release the workers.","html_id":"release-the-workers","implicit":true,"key":"PFkFkHafHI"}],"key":"ZausJTiRfE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"!date","key":"sjKFE4WGzd"},{"type":"output","id":"ghgVZArqZ1eIxXBpmjIB6","data":[{"output_type":"stream","name":"stdout","text":"Tue Jun 17 21:54:00 UTC 2025\r\n"}],"key":"XpTRdN9EWn"}],"key":"Ngtu34D8oZ"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"cluster.close()","visibility":"show","key":"PtOvks3MPS"},{"type":"output","id":"px_fghTinAe6gTRIQvRIA","data":[],"visibility":"show","key":"yPzzJBER1y"}],"visibility":"show","key":"xuoDdQfIe0"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Show which python package versions were used","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JBt7YVCtuS"}],"identifier":"show-which-python-package-versions-were-used","label":"Show which python package versions were used","html_id":"show-which-python-package-versions-were-used","implicit":true,"key":"ProDqg3sUE"}],"visibility":"show","key":"t4bijlvr76"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%load_ext watermark\n%watermark -iv","key":"Iw978SRFQ4"},{"type":"output","id":"VLob53CqI21vyAjwK_avw","data":[{"output_type":"stream","name":"stdout","text":"intake     : 2.0.8\nnumpy      : 2.3.0\ndistributed: 2025.5.1\nmatplotlib : 3.10.3\nxarray     : 2025.6.1\n\n"}],"key":"RjYNHvAMr5"}],"key":"e0si5qmlfQ"}],"key":"H3JWbaOT5P"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"How to Cite This Cookbook","url":"/notebooks/how-to-cite","group":"Preamble"}}},"domain":"http://localhost:3000"}