{"version":"1","records":[{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook"},"content":"\n\n\n\n\n\n\n\n\n\nThe NA-CORDEX data archive contains cloud-optimized, Zarr-based output from regional climate models (RCMs) run over a domain covering most of North America using boundary conditions from global climate model (GCM) simulations in the CMIP5 archive. These simulations run from 1950–2100 with a spatial resolution of 0.22°/25km or 0.44°/50km. Data is available for impacts-relevant variables at daily and longer frequencies.\n\nThis Project Pythia Cookbook covers how to load and view data summaries from the NA-CORDEX dataset.\n\nComplete documentation for the cloud-optimized version of the NA-CORDEX dataset can be found here: \n\nhttps://​na​-cordex​.org​/na​-cordex​-on​-aws​.html\n\nMore information on the scope and objectives for NA-CORDEX can be found here:  \n\nhttps://​na​-cordex​.org​/index​.html","type":"content","url":"/","position":1},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl2":"Motivation"},"type":"lvl2","url":"/#motivation","position":2},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl2":"Motivation"},"content":"This cookbook provides useful methods for summarizing data values in large climate datasets. It clearly shows where data have extreme values and where data are missing; this can be useful for validating that the data were gathered and stored correctly. While this cookbook is specifically designed to examine any portion of the NA-CORDEX dataset using an intake catalog, the code can be adapted straightforwardly to other datasets that can be loaded via xarray.\n\nThe main python packages used are xarray, intake-esm, dask, and matplotlib.","type":"content","url":"/#motivation","position":3},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl2":"Authors"},"type":"lvl2","url":"/#authors","position":4},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl2":"Authors"},"content":"Brian Bonnlander, \n\nSeth McGinnis","type":"content","url":"/#authors","position":5},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Contributors","lvl2":"Authors"},"type":"lvl3","url":"/#contributors","position":6},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Contributors","lvl2":"Authors"},"content":"","type":"content","url":"/#contributors","position":7},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl2":"Structure"},"type":"lvl2","url":"/#structure","position":8},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl2":"Structure"},"content":"This cookbook is a single notebook broken into several sections. The first section allows users to tailor the notebook to their chosen computing environment and storage cloud. Other sections contain code for subsetting and plotting data, obtaining Dask workers, and producing summary plots.","type":"content","url":"/#structure","position":9},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Select User Options","lvl2":"Structure"},"type":"lvl3","url":"/#select-user-options","position":10},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Select User Options","lvl2":"Structure"},"content":"Users may choose the value of several boolean switches:\n\nCloud storage provider (Amazon AWS or NCAR),\n\nWhether to truncate the data if running on a resource-limited computer,\n\nWhether to obtain a Dask cluster from a PBS Scheduler or via the Dask Gateway package.\n\nNote: Using the NCAR cloud storage system requires a login account on an NCAR HPC computer.","type":"content","url":"/#select-user-options","position":11},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Create and Connect to Dask Distributed Cluster","lvl2":"Structure"},"type":"lvl3","url":"/#create-and-connect-to-dask-distributed-cluster","position":12},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Create and Connect to Dask Distributed Cluster","lvl2":"Structure"},"content":"This section shows several possible ways to create and connect to a Dask cluster for processing data in parallel.\n\nThe user can choose to obtain workers using a PBS Scheduler, Dask Gateway, or a dask LocalCluster.","type":"content","url":"/#create-and-connect-to-dask-distributed-cluster","position":13},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Find and Obtain Data Using an Intake Catalog","lvl2":"Structure"},"type":"lvl3","url":"/#find-and-obtain-data-using-an-intake-catalog","position":14},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Find and Obtain Data Using an Intake Catalog","lvl2":"Structure"},"content":"This section shows how to interact with an Intake-ESM catalog to find, select, and open datasets via xarray.","type":"content","url":"/#find-and-obtain-data-using-an-intake-catalog","position":15},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Functions for Subsetting and Plotting","lvl2":"Structure"},"type":"lvl3","url":"/#functions-for-subsetting-and-plotting","position":16},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Functions for Subsetting and Plotting","lvl2":"Structure"},"content":"This section provides python functions for subsetting and plotting data. They rely on the xarray and matplotlib packages, and can be generalized to other climate datasets.","type":"content","url":"/#functions-for-subsetting-and-plotting","position":17},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Produce Diagnostic Plots","lvl2":"Structure"},"type":"lvl3","url":"/#produce-diagnostic-plots","position":18},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Produce Diagnostic Plots","lvl2":"Structure"},"content":"This section produces the diagnostic plots. It shows how to produce timing information and gives options for saving high-resolution images of the resulting plots.","type":"content","url":"/#produce-diagnostic-plots","position":19},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl2":"Running the Notebooks"},"type":"lvl2","url":"/#running-the-notebooks","position":20},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl2":"Running the Notebooks"},"content":"You can either run the notebook using \n\nBinder or on your local machine.","type":"content","url":"/#running-the-notebooks","position":21},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-binder","position":22},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"content":"The simplest way to interact with a Jupyter Notebook is through\n\n\nBinder, which enables the execution of a\n\n\nJupyter Book in the cloud. The details of how this works are not\nimportant for now. All you need to know is how to launch a Pythia\nCookbooks chapter via Binder. Simply navigate your mouse to\nthe top right corner of the book chapter you are viewing and click\non the rocket ship icon, (see figure below), and be sure to select\n“launch Binder”. After a moment you should be presented with a\nnotebook that you can interact with. I.e. you’ll be able to execute\nand even change the example programs. You’ll see that the code cells\nhave no output at first, until you execute them by pressing\nShift+Enter. Complete details on how to interact with\na live Jupyter notebook are described in \n\nGetting Started with\nJupyter.","type":"content","url":"/#running-on-binder","position":23},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-your-own-machine","position":24},{"hierarchy":{"lvl1":"NA-CORDEX Data Visualization Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"content":"If you are interested in running this material locally on your computer, you will need to follow this workflow:\n\nClone the https://github.com/ProjectPythia/na-cordex-viz-cookbook repository: git clone https://github.com/ProjectPythia/na-cordex-viz-cookbook.git\n\nMove into the na-cordex-viz-cookbook directorycd na-cordex-viz-cookbook\n\nCreate and activate your conda environment from the environment.yml fileconda env create -f environment.yml\nconda activate na-cordex-viz-cookbook\n\nNote: If building the environment stalls using conda, consider instead installing the mamba package and using mamba env create -f environment.yml.\n\nMove into the notebooks directory and start up Jupyterlabcd notebooks/\njupyter lab","type":"content","url":"/#running-on-your-own-machine","position":25},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"type":"lvl1","url":"/notebooks/how-to-cite","position":0},{"hierarchy":{"lvl1":"How to Cite This Cookbook"},"content":"The material in Project Pythia’s NA-CORDEX Visualization Cookbook is licensed for free and open consumption and reuse. All code is served under \n\nApache 2.0, while all non-code content is licensed under \n\nCreative Commons BY 4.0 (CC BY 4.0). Effectively, this means you are free to share and adapt this material so long as you give appropriate credit to the Cookbook authors and the Project Pythia community.\n\nThe source code for the book is \n\nreleased on GitHub and archived on Zenodo. This DOI will always resolve to the latest release of the book source:\n\n","type":"content","url":"/notebooks/how-to-cite","position":1},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores"},"type":"lvl1","url":"/notebooks/plot-diagnostics","position":0},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores"},"content":"The NA-CORDEX data archive contains output from regional climate models (RCMs) run over a domain covering most of North America using boundary conditions from global climate model (GCM) simulations in the CMIP5 archive.  It differs from many climate datasets by combining runs from many independently derived simulations.  The usage of Zarr, Xarray, and Intake-ESM help simplify the problem of examining these disparate runs.\n\nSee the \n\nREADME file for more pointers and information on the NA-CORDEX data archive.","type":"content","url":"/notebooks/plot-diagnostics","position":1},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Overview"},"type":"lvl2","url":"/notebooks/plot-diagnostics#overview","position":2},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Overview"},"content":"This cookbook provides useful methods for summarizing data values in large climate datasets.   It clearly shows where data have extreme values and where data are missing; this can be useful for validating that the data were gathered and stored correctly.   While this cookbook is specifically designed to examine any portion of the NA-CORDEX dataset using an intake catalog, the code can be adapted straightforwardly to other datasets that can be loaded via xarray.\n\nTopics covered in this notebook include:\n\nDifferent Ways to Create and Connect to Dask Distributed Cluster\n\nHow to Find and Obtain Data Using an Intake-ESM Catalog\n\nHow to Create Various Statistical Summary Plots with matplotlib\n\n","type":"content","url":"/notebooks/plot-diagnostics#overview","position":3},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Prerequisites"},"type":"lvl2","url":"/notebooks/plot-diagnostics#prerequisites","position":4},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Prerequisites"},"content":"To more fully understand how the code in this notebook works, users are encouraged to explore the following introductory articles.\n\nConcepts\n\nImportance\n\nNotes\n\nIntro to Xarray\n\nHelpful\n\n\n\nDask Arrays with Xarray\n\nHelpful\n\n\n\nUnderstanding of Zarr Metadata\n\nHelpful\n\nFamiliarity with metadata structure\n\nUnderstanding of Matplotlib\n\nHelpful\n\nFamiliarity with plot elements in matplotlib\n\nTime to learn: 45 minutes\n\nNote: This notebook contains optional choices for running on NCAR supercomputers.   These can be ignored for users running outside of the NCAR domain.\n\n\n\n","type":"content","url":"/notebooks/plot-diagnostics#prerequisites","position":5},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Imports"},"type":"lvl2","url":"/notebooks/plot-diagnostics#imports","position":6},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Imports"},"content":"The main python packages used are xarray, intake-esm, dask, and matplotlib.\n\nBecause some of the CORDEX data have been interpolated from a Lambert Conformal grid onto a rectangular grid for ease of use, there can be many missing values on the edges of the interpolated grid. For this reason, we also turn off warnings complaining about missing values in the data.\n\nimport xarray as xr\nimport numpy as np\nimport intake\nimport ast\nimport matplotlib.pyplot as plt\n\n# Ignore dask-numpy warnings about finding missing values in the data\n%env PYTHONWARNINGS=ignore\n\n","type":"content","url":"/notebooks/plot-diagnostics#imports","position":7},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Select User Options"},"type":"lvl2","url":"/notebooks/plot-diagnostics#select-user-options","position":8},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Select User Options"},"content":"Users may choose between:\n\nCloud storage provider (Amazon AWS or NCAR),\n\nWhether to truncate the data if running on a resource-limited computer,\n\nWhether to obtain a Dask cluster from a PBS Scheduler or via the Dask Gateway package.\n\nNote: Using the NCAR cloud storage system requires a login account on an NCAR HPC computer.\n\n","type":"content","url":"/notebooks/plot-diagnostics#select-user-options","position":9},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Choose Cloud Storage (Amazon AWS or NCAR Cloud)","lvl2":"Select User Options"},"type":"lvl3","url":"/notebooks/plot-diagnostics#choose-cloud-storage-amazon-aws-or-ncar-cloud","position":10},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Choose Cloud Storage (Amazon AWS or NCAR Cloud)","lvl2":"Select User Options"},"content":"\n\n# If True,  use NCAR Cloud Storage.   Requires an NCAR user account.\n# If False, use AWS  Cloud Storage.\n\nUSE_NCAR_CLOUD = False\n\n","type":"content","url":"/notebooks/plot-diagnostics#choose-cloud-storage-amazon-aws-or-ncar-cloud","position":11},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Choose whether to truncate data for resource-limited computers","lvl2":"Select User Options"},"type":"lvl3","url":"/notebooks/plot-diagnostics#choose-whether-to-truncate-data-for-resource-limited-computers","position":12},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Choose whether to truncate data for resource-limited computers","lvl2":"Select User Options"},"content":"When running this notebook where compute resources are limited, or data transfer rates are slow, set TRUNCATE_DATA to True.   This will limit time ranges to 3 years from the start of a chosen NA-CORDEX scenario.\n\nTRUNCATE_DATA = True\n\n","type":"content","url":"/notebooks/plot-diagnostics#choose-whether-to-truncate-data-for-resource-limited-computers","position":13},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Choose whether to use a PBS Scheduler","lvl2":"Select User Options"},"type":"lvl3","url":"/notebooks/plot-diagnostics#choose-whether-to-use-a-pbs-scheduler","position":14},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Choose whether to use a PBS Scheduler","lvl2":"Select User Options"},"content":"If running on a HPC computer with a PBS Scheduler, set to True.  Otherwise, set to False.\n\nUSE_PBS_SCHEDULER = False\n\n","type":"content","url":"/notebooks/plot-diagnostics#choose-whether-to-use-a-pbs-scheduler","position":15},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Choose whether to use Dask Gateway","lvl2":"Select User Options"},"type":"lvl3","url":"/notebooks/plot-diagnostics#choose-whether-to-use-dask-gateway","position":16},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Choose whether to use Dask Gateway","lvl2":"Select User Options"},"content":"If running on Jupyter server with Dask Gateway configured, set to True.  Otherwise, set to False.\n\nUSE_DASK_GATEWAY = False\n\n","type":"content","url":"/notebooks/plot-diagnostics#choose-whether-to-use-dask-gateway","position":17},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Create and Connect to Dask Distributed Cluster"},"type":"lvl2","url":"/notebooks/plot-diagnostics#create-and-connect-to-dask-distributed-cluster","position":18},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Create and Connect to Dask Distributed Cluster"},"content":"\n\ndef get_gateway_cluster():\n    \"\"\" Create cluster through dask_gateway\n    \"\"\"\n    from dask_gateway import Gateway\n\n    gateway = Gateway()\n    cluster = gateway.new_cluster()\n    cluster.adapt(minimum=2, maximum=20)\n    return cluster\n\ndef get_pbs_cluster():\n    \"\"\" Create cluster through dask_jobqueue\n    \"\"\"\n    from dask_jobqueue import PBSCluster\n    \n    if TRUNCATE_DATA:\n        num_jobs = 4 \n        walltime = '0:10:00' \n        memory = '2GB' \n    else:\n        num_jobs = 20\n        walltime = '0:20:00'\n        memory = '10GB' \n\n    cluster = PBSCluster(cores=1, processes=1, walltime=walltime, memory=memory, queue='casper', \n                         resource_spec=f\"select=1:ncpus=1:mem={memory}\",)\n    cluster.scale(jobs=num_jobs)\n    return cluster\n\ndef get_local_cluster():\n    \"\"\" Create cluster using the Jupyter server's resources\n    \"\"\"\n    from distributed import LocalCluster\n    cluster = LocalCluster()    \n\n    if TRUNCATE_DATA:\n        cluster.scale(4)\n    else:\n        cluster.scale(20)\n    return cluster\n\n# Obtain dask cluster in one of three ways\n\nif USE_PBS_SCHEDULER:\n    cluster = get_pbs_cluster()\nelif USE_DASK_GATEWAY:\n    cluster = get_gateway_cluster()\nelse:\n    cluster = get_local_cluster()\n\n# Connect to cluster\nfrom distributed import Client\nclient = Client(cluster)\n\n# Display cluster dashboard URL\ncluster\n\n☝️ Link to Dask dashboard will appear above.\n\n","type":"content","url":"/notebooks/plot-diagnostics#create-and-connect-to-dask-distributed-cluster","position":19},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Find and Obtain Data Using an Intake Catalog"},"type":"lvl2","url":"/notebooks/plot-diagnostics#find-and-obtain-data-using-an-intake-catalog","position":20},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Find and Obtain Data Using an Intake Catalog"},"content":"Intake-esm Documentation\n\n","type":"content","url":"/notebooks/plot-diagnostics#find-and-obtain-data-using-an-intake-catalog","position":21},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Define the Intake Catalog URL and Storage Access Options","lvl2":"Find and Obtain Data Using an Intake Catalog"},"type":"lvl3","url":"/notebooks/plot-diagnostics#define-the-intake-catalog-url-and-storage-access-options","position":22},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Define the Intake Catalog URL and Storage Access Options","lvl2":"Find and Obtain Data Using an Intake Catalog"},"content":"\n\nif USE_NCAR_CLOUD:\n    catalog_url = \"https://stratus.ucar.edu/ncar-na-cordex/catalogs/aws-na-cordex.json\"\n    storage_options={\"anon\": True, 'client_kwargs':{\"endpoint_url\":\"https://stratus.ucar.edu/\"}}\n                     \nelse:\n    catalog_url = \"https://ncar-na-cordex.s3-us-west-2.amazonaws.com/catalogs/aws-na-cordex.json\"\n    storage_options={\"anon\": True}\n\n","type":"content","url":"/notebooks/plot-diagnostics#define-the-intake-catalog-url-and-storage-access-options","position":23},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Open catalog and produce a content summary","lvl2":"Find and Obtain Data Using an Intake Catalog"},"type":"lvl3","url":"/notebooks/plot-diagnostics#open-catalog-and-produce-a-content-summary","position":24},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Open catalog and produce a content summary","lvl2":"Find and Obtain Data Using an Intake Catalog"},"content":"\n\n# Have the catalog interpret the \"na-cordex-models\" column as a list of values, as opposed to single values.\ncol = intake.open_esm_datastore(catalog_url, read_csv_kwargs={\"converters\": {\"na-cordex-models\": ast.literal_eval}},)\ncol\n\n# Show the first few lines of the catalog\ncol.df.head(10)\n\n# Produce a catalog content summary.\n\nuniques = col.unique()\n\ncolumns = [\"variable\", \"scenario\", \"grid\", \"na-cordex-models\", \"bias_correction\"]\nfor column in columns:\n    print(f'{column}: {uniques[column]}\\n')\n\n","type":"content","url":"/notebooks/plot-diagnostics#open-catalog-and-produce-a-content-summary","position":25},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Load data into xarray using the catalog","lvl2":"Find and Obtain Data Using an Intake Catalog"},"type":"lvl3","url":"/notebooks/plot-diagnostics#load-data-into-xarray-using-the-catalog","position":26},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Load data into xarray using the catalog","lvl2":"Find and Obtain Data Using an Intake Catalog"},"content":"Choose any combination of variable, grid, scenario, and bias correction listed in the catalog.\n\nBelow we choose the variable ‘tmax’ (Maximum Daily Surface Temperature) as a default for its ease of interpretation.   For this example, we also choose a lower-resolution grid and the scenario with the shortest time range (15 years) to reduce the default data processing requirements.\n\ndata_var = 'tmax'\n\ncol_subset = col.search(\n    variable=data_var,\n    grid=\"NAM-44i\",\n    scenario=\"eval\",\n    bias_correction=\"raw\",\n)\n\ncol_subset\n\n# Verify our query matches at least one entry in the catalog.\n\ncol_subset.df\n\n# Load catalog entries for subset into a dictionary of xarray datasets, and open the first one.\n\ndsets = col_subset.to_dataset_dict(\n    xarray_open_kwargs={\"consolidated\": True}, storage_options=storage_options\n)\nprint(f\"\\nDataset dictionary keys:\\n {dsets.keys()}\")\n\n# Load the first dataset and display a summary.\ndataset_key = list(dsets.keys())[0]\nstore_name = dataset_key + \".zarr\"\n\nds = dsets[dataset_key]\nds\n\n# Note that the xarray dataset summary includes a 'member_id' coordinate, which is a renaming of the \n# 'na-cordex-models' column in the catalog.\n\n","type":"content","url":"/notebooks/plot-diagnostics#load-data-into-xarray-using-the-catalog","position":27},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Functions for Subsetting and Plotting"},"type":"lvl2","url":"/notebooks/plot-diagnostics#functions-for-subsetting-and-plotting","position":28},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Functions for Subsetting and Plotting"},"content":"\n\n","type":"content","url":"/notebooks/plot-diagnostics#functions-for-subsetting-and-plotting","position":29},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Helper Function to Create a Single Map Plot","lvl2":"Functions for Subsetting and Plotting"},"type":"lvl3","url":"/notebooks/plot-diagnostics#helper-function-to-create-a-single-map-plot","position":30},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Helper Function to Create a Single Map Plot","lvl2":"Functions for Subsetting and Plotting"},"content":"\n\ndef plotMap(ax, map_slice, date_object=None, member_id=None):\n    \"\"\"Create a map plot on the given axes, with min/max as text\"\"\"\n\n    ax.imshow(map_slice, origin='lower')\n\n    minval = map_slice.min(dim = ['lat', 'lon'])\n    maxval = map_slice.max(dim = ['lat', 'lon'])\n\n    # Format values to have at least 4 digits of precision.\n    ax.text(0.01, 0.03, \"Min: %3g\" % minval, transform=ax.transAxes, fontsize=12)\n    ax.text(0.99, 0.03, \"Max: %3g\" % maxval, transform=ax.transAxes, fontsize=12, horizontalalignment='right')\n    ax.set_xticks([])\n    ax.set_yticks([])\n    \n    if date_object:\n        ax.set_title(date_object.values.astype(str)[:10], fontsize=12)\n        \n    if member_id:\n        ax.set_ylabel(member_id, fontsize=12)\n        \n    return ax\n\n","type":"content","url":"/notebooks/plot-diagnostics#helper-function-to-create-a-single-map-plot","position":31},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Helper Function for Finding Dates with Available Data","lvl2":"Functions for Subsetting and Plotting"},"type":"lvl3","url":"/notebooks/plot-diagnostics#helper-function-for-finding-dates-with-available-data","position":32},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Helper Function for Finding Dates with Available Data","lvl2":"Functions for Subsetting and Plotting"},"content":"\n\ndef getValidDateIndexes(member_slice):\n    \"\"\"Search for the first and last dates with finite values.\"\"\"\n    min_values = member_slice.min(dim = ['lat', 'lon'])\n    is_finite = np.isfinite(min_values)\n    finite_indexes = np.where(is_finite)\n\n    start_index = finite_indexes[0][0]\n    end_index = finite_indexes[0][-1]\n    return start_index, end_index\n\n","type":"content","url":"/notebooks/plot-diagnostics#helper-function-for-finding-dates-with-available-data","position":33},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Helper Function for Truncating Data Slices","lvl2":"Functions for Subsetting and Plotting"},"type":"lvl3","url":"/notebooks/plot-diagnostics#helper-function-for-truncating-data-slices","position":34},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Helper Function for Truncating Data Slices","lvl2":"Functions for Subsetting and Plotting"},"content":"\n\ndef truncateData(data_slice, num_years):\n    \"\"\"Remove all but the first num_years of valid data from the data slice.\"\"\"\n    start_index, _ = getValidDateIndexes(data_slice)\n    start_date = data_slice.time[start_index]\n    start_year = start_date.dt.year.values\n    year_range = start_year + np.arange(num_years)\n    \n    data_slice = data_slice.isel(time=ds.time.dt.year.isin(year_range))\n    return data_slice\n\n","type":"content","url":"/notebooks/plot-diagnostics#helper-function-for-truncating-data-slices","position":35},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Function Producing Maps of First, Middle, and Final Timesteps","lvl2":"Functions for Subsetting and Plotting"},"type":"lvl3","url":"/notebooks/plot-diagnostics#function-producing-maps-of-first-middle-and-final-timesteps","position":36},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Function Producing Maps of First, Middle, and Final Timesteps","lvl2":"Functions for Subsetting and Plotting"},"content":"\n\ndef plot_first_mid_last(ds, data_var, store_name):\n    \"\"\"Plot the first, middle, and final time steps for several climate runs.\"\"\"\n    num_members_to_plot = 4\n    member_names = ds.coords['member_id'].values[0:num_members_to_plot]\n    \n    figWidth = 18 \n    figHeight = 12 \n    numPlotColumns = 3\n    fig, axs = plt.subplots(num_members_to_plot, numPlotColumns, figsize=(figWidth, figHeight), constrained_layout=True)\n\n    for index in np.arange(num_members_to_plot):\n        mem_id = member_names[index]\n        data_slice = ds[data_var].sel(member_id=mem_id)\n           \n        start_index, end_index = getValidDateIndexes(data_slice)\n        midDateIndex = np.floor(len(ds.time) / 2).astype(int)\n\n        startDate = ds.time[start_index]\n        first_step = data_slice.sel(time=startDate) \n        ax = axs[index, 0]\n        plotMap(ax, first_step, startDate, mem_id)\n\n        midDate = ds.time[midDateIndex]\n        mid_step = data_slice.sel(time=midDate)   \n        ax = axs[index, 1]\n        plotMap(ax, mid_step, midDate)\n\n        endDate = ds.time[end_index]\n        last_step = data_slice.sel(time=endDate)            \n        ax = axs[index, 2]\n        plotMap(ax, last_step, endDate)\n        \n        plt.suptitle(f'First, Middle, and Last Timesteps for Selected Runs in \"{store_name}\"', fontsize=20)\n\n    return fig\n\n","type":"content","url":"/notebooks/plot-diagnostics#function-producing-maps-of-first-middle-and-final-timesteps","position":37},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Function Producing Statistical Map Plots","lvl2":"Functions for Subsetting and Plotting"},"type":"lvl3","url":"/notebooks/plot-diagnostics#function-producing-statistical-map-plots","position":38},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Function Producing Statistical Map Plots","lvl2":"Functions for Subsetting and Plotting"},"content":"\n\ndef plot_stat_maps(ds, data_var, store_name, truncate_data):\n    \"\"\"Plot the mean, min, max, and standard deviation values for several climate runs, aggregated over time.\"\"\"\n    \n    num_members_to_plot = 4\n    member_names = ds.coords['member_id'].values[0:num_members_to_plot]\n\n    figWidth = 25 \n    figHeight = 12 \n    numPlotColumns = 4\n    \n    fig, axs = plt.subplots(num_members_to_plot, numPlotColumns, figsize=(figWidth, figHeight), constrained_layout=True)\n\n    for index in np.arange(num_members_to_plot):\n        mem_id = member_names[index]\n        data_slice = ds[data_var].sel(member_id=mem_id)\n        \n        if truncate_data:\n            # Limit time range to one year.\n            data_slice = truncateData(data_slice, 1)\n\n        # Save slice in memory to prevent repeated disk loads\n        data_slice = data_slice.persist()\n\n        data_agg = data_slice.min(dim='time')\n        plotMap(axs[index, 0], data_agg, member_id=mem_id)\n\n        data_agg = data_slice.max(dim='time')\n        plotMap(axs[index, 1], data_agg)\n\n        data_agg = data_slice.mean(dim='time')\n        plotMap(axs[index, 2], data_agg)\n\n        data_agg = data_slice.std(dim='time')\n        plotMap(axs[index, 3], data_agg)\n\n    axs[0, 0].set_title(f'min({data_var})', fontsize=15)\n    axs[0, 1].set_title(f'max({data_var})', fontsize=15)\n    axs[0, 2].set_title(f'mean({data_var})', fontsize=15)\n    axs[0, 3].set_title(f'std({data_var})', fontsize=15)\n\n    plt.suptitle(f'Spatial Statistics for Selected Runs in \"{store_name}\"', fontsize=20)\n\n    return fig\n\n","type":"content","url":"/notebooks/plot-diagnostics#function-producing-statistical-map-plots","position":39},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Function Producing Time Series Plots","lvl2":"Functions for Subsetting and Plotting"},"type":"lvl3","url":"/notebooks/plot-diagnostics#function-producing-time-series-plots","position":40},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Function Producing Time Series Plots","lvl2":"Functions for Subsetting and Plotting"},"content":"Also show which dates have no available data values, as a rug plot.\n\ndef plot_timeseries(ds, data_var, store_name, truncate_data):\n    \"\"\"Plot the mean, min, max, and standard deviation values for several climate runs, \n       aggregated over lat/lon dimensions.\"\"\"\n\n    num_members_to_plot = 4\n    member_names = ds.coords['member_id'].values[0:num_members_to_plot]\n\n    figWidth = 25 \n    figHeight = 20\n    linewidth = 0.5\n\n    numPlotColumns = 1\n    fig, axs = plt.subplots(num_members_to_plot, numPlotColumns, figsize=(figWidth, figHeight))\n        \n    for index in np.arange(num_members_to_plot):\n        mem_id = member_names[index]\n        data_slice = ds[data_var].sel(member_id=mem_id)\n        \n        if truncate_data:\n            # Limit time range to one year.\n            data_slice = truncateData(data_slice, 1)\n\n        # Save slice in memory to prevent repeated disk loads\n        data_slice = data_slice.persist()\n\n        unit_string = ds[data_var].attrs['units']\n        \n        min_vals = data_slice.min(dim = ['lat', 'lon'])\n        max_vals = data_slice.max(dim = ['lat', 'lon'])\n        mean_vals = data_slice.mean(dim = ['lat', 'lon'])\n        std_vals = data_slice.std(dim = ['lat', 'lon'])\n\n        missing_indexes = np.isnan(min_vals).compute()\n        missing_times = data_slice.time[missing_indexes]\n\n            \n        axs[index].plot(data_slice.time, max_vals, linewidth=linewidth, label='max', color='red')\n        axs[index].plot(data_slice.time, mean_vals, linewidth=linewidth, label='mean', color='black')\n        axs[index].fill_between(data_slice.time, (mean_vals - std_vals), (mean_vals + std_vals), \n                                         color='grey', linewidth=0, label='std', alpha=0.5)\n        axs[index].plot(data_slice.time, min_vals, linewidth=linewidth, label='min', color='blue')\n            \n        # Produce a rug plot along the bottom of the figure for missing data.\n        ymin, ymax = axs[index].get_ylim()\n        rug_y = ymin + 0.01*(ymax-ymin)\n        axs[index].plot(missing_times, [rug_y]*len(missing_times), '|', color='m', label='missing')\n        axs[index].set_title(mem_id, fontsize=20)\n        axs[index].legend(loc='upper right')\n        axs[index].set_ylabel(unit_string)\n\n    plt.tight_layout(pad=10.2, w_pad=3.5, h_pad=3.5)\n    plt.suptitle(f'Temporal Statistics for Selected Runs in \"{store_name}\"', fontsize=20)\n\n    return fig\n\n","type":"content","url":"/notebooks/plot-diagnostics#function-producing-time-series-plots","position":41},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Produce Diagnostic Plots"},"type":"lvl2","url":"/notebooks/plot-diagnostics#produce-diagnostic-plots","position":42},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl2":"Produce Diagnostic Plots"},"content":"\n\n","type":"content","url":"/notebooks/plot-diagnostics#produce-diagnostic-plots","position":43},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Plot First, Middle, and Final Timesteps for Several Output Runs (less compute intensive)","lvl2":"Produce Diagnostic Plots"},"type":"lvl3","url":"/notebooks/plot-diagnostics#plot-first-middle-and-final-timesteps-for-several-output-runs-less-compute-intensive","position":44},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Plot First, Middle, and Final Timesteps for Several Output Runs (less compute intensive)","lvl2":"Produce Diagnostic Plots"},"content":"\n\n%%time\n\n# Plot using the Zarr Store obtained from an earlier step in the notebook.\nfigure = plot_first_mid_last(ds, data_var, store_name)\n\nplt.show()\n\n","type":"content","url":"/notebooks/plot-diagnostics#plot-first-middle-and-final-timesteps-for-several-output-runs-less-compute-intensive","position":45},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl4":"Optional: Save figure to a PNG file","lvl3":"Plot First, Middle, and Final Timesteps for Several Output Runs (less compute intensive)","lvl2":"Produce Diagnostic Plots"},"type":"lvl4","url":"/notebooks/plot-diagnostics#optional-save-figure-to-a-png-file","position":46},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl4":"Optional: Save figure to a PNG file","lvl3":"Plot First, Middle, and Final Timesteps for Several Output Runs (less compute intensive)","lvl2":"Produce Diagnostic Plots"},"content":"Change the value of SAVE_PLOT to True to produce a PNG file of the plot.   The file will be saved in the same folder as this notebook.\n\nThen use Jupyter’s file browser to locate the file and right-click the file to download it.\n\nSAVE_PLOT = False\nif SAVE_PLOT:\n    plotfile = f'./{dataset_key}_FML.png'\n    figure.savefig(plotfile, dpi=100)\n\n","type":"content","url":"/notebooks/plot-diagnostics#optional-save-figure-to-a-png-file","position":47},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Create Statistical Map Plots for Several Output Runs (more compute intensive)","lvl2":"Produce Diagnostic Plots"},"type":"lvl3","url":"/notebooks/plot-diagnostics#create-statistical-map-plots-for-several-output-runs-more-compute-intensive","position":48},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Create Statistical Map Plots for Several Output Runs (more compute intensive)","lvl2":"Produce Diagnostic Plots"},"content":"\n\n%%time\n\n# Plot using the Zarr Store obtained from an earlier step in the notebook.\nfigure = plot_stat_maps(ds, data_var, store_name, TRUNCATE_DATA)\n\nplt.show()\n\n","type":"content","url":"/notebooks/plot-diagnostics#create-statistical-map-plots-for-several-output-runs-more-compute-intensive","position":49},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl4":"Optional: Save figure to a PNG file","lvl3":"Create Statistical Map Plots for Several Output Runs (more compute intensive)","lvl2":"Produce Diagnostic Plots"},"type":"lvl4","url":"/notebooks/plot-diagnostics#optional-save-figure-to-a-png-file-1","position":50},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl4":"Optional: Save figure to a PNG file","lvl3":"Create Statistical Map Plots for Several Output Runs (more compute intensive)","lvl2":"Produce Diagnostic Plots"},"content":"Change the value of SAVE_PLOT to True to produce a PNG file of the plot.   The file will be saved in the same folder as this notebook.\n\nThen use Jupyter’s file browser to locate the file and right-click the file to download it.\n\nSAVE_PLOT = False\nif SAVE_PLOT:\n    plotfile = f'./{dataset_key}_MAPS.png'\n    figure.savefig(plotfile, dpi=100)\n\n","type":"content","url":"/notebooks/plot-diagnostics#optional-save-figure-to-a-png-file-1","position":51},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Plot Time Series for Several Output Runs (more compute intensive)","lvl2":"Produce Diagnostic Plots"},"type":"lvl3","url":"/notebooks/plot-diagnostics#plot-time-series-for-several-output-runs-more-compute-intensive","position":52},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Plot Time Series for Several Output Runs (more compute intensive)","lvl2":"Produce Diagnostic Plots"},"content":"\n\n%%time\n\n# Plot using the Zarr Store obtained from an earlier step in the notebook.\nfigure = plot_timeseries(ds, data_var, store_name, TRUNCATE_DATA)\n\nplt.show()\n\n","type":"content","url":"/notebooks/plot-diagnostics#plot-time-series-for-several-output-runs-more-compute-intensive","position":53},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl4":"Optional: Save figure to a PNG file","lvl3":"Plot Time Series for Several Output Runs (more compute intensive)","lvl2":"Produce Diagnostic Plots"},"type":"lvl4","url":"/notebooks/plot-diagnostics#optional-save-figure-to-a-png-file-2","position":54},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl4":"Optional: Save figure to a PNG file","lvl3":"Plot Time Series for Several Output Runs (more compute intensive)","lvl2":"Produce Diagnostic Plots"},"content":"Change the value of SAVE_PLOT to True to produce a PNG file of the plot.   The file will be saved in the same folder as this notebook.\n\nThen use Jupyter’s file browser to locate the file and right-click the file to download it.\n\nSAVE_PLOT = False\nif SAVE_PLOT:\n    plotfile = f'./{dataset_key}_TS.png'\n    figure.savefig(plotfile, dpi=100)\n\n","type":"content","url":"/notebooks/plot-diagnostics#optional-save-figure-to-a-png-file-2","position":55},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Release the workers.","lvl2":"Produce Diagnostic Plots"},"type":"lvl3","url":"/notebooks/plot-diagnostics#release-the-workers","position":56},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Release the workers.","lvl2":"Produce Diagnostic Plots"},"content":"\n\n!date\n\ncluster.close()\n\n","type":"content","url":"/notebooks/plot-diagnostics#release-the-workers","position":57},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Show which python package versions were used","lvl2":"Produce Diagnostic Plots"},"type":"lvl3","url":"/notebooks/plot-diagnostics#show-which-python-package-versions-were-used","position":58},{"hierarchy":{"lvl1":"Make Diagnostic Plots for NA-CORDEX Zarr Stores","lvl3":"Show which python package versions were used","lvl2":"Produce Diagnostic Plots"},"content":"\n\n%load_ext watermark\n%watermark -iv","type":"content","url":"/notebooks/plot-diagnostics#show-which-python-package-versions-were-used","position":59}]}